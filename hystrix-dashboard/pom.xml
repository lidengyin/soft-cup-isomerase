<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>cn.hctech2006</groupId>
        <artifactId>soft-cup</artifactId>
        <version>0.0.1-SNAPSHOT</version>
    </parent>
    <groupId>cn.hctech2006.softcup</groupId>
    <artifactId>hystrix-dashboard</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>hystrix-dashboard</name>
    <description>Demo project for Spring Boot</description>

    <properties>
        <spring-boot-admin.version>2.2.2</spring-boot-admin.version>
        <docker.image.prefix>47.97.170.173:5000</docker.image.prefix>
    </properties>

    <dependencies>
        <!--监控-->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-starter-client</artifactId>
            <version>2.2.2</version>
        </dependency>
        <!--配置中心-->
<!--        <dependency>-->
<!--            <groupId>org.springframework.cloud</groupId>-->
<!--            <artifactId>spring-cloud-starter-config</artifactId>-->
<!--        </dependency>-->
        <!--服务发现-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-consul-discovery</artifactId>
        </dependency>
        <!--服务熔断监控-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-hystrix-dashboard</artifactId>
        </dependency>
        <!--集成服务熔断监控集群，排除默认eureka-->
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-netflix-turbine</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.cloud</groupId>
                    <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <!--监控中心-->
        <dependency>
            <groupId>de.codecentric</groupId>
            <artifactId>spring-boot-admin-client</artifactId>
            <version>${spring-boot-admin.version}</version>
        </dependency>

    </dependencies>




    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <!--使用Maven和Dockerfile命令构建镜像-->
            <plugin>

                <groupId>com.spotify</groupId>
                <artifactId>dockerfile-maven-plugin</artifactId>
                <version>1.3.6</version>
                <configuration>
                    <!--生成镜像名称-->
                    <repository>
                        ${docker.image.prefix}/${project.name}
                    </repository>
                    <!--生成镜像版本-->
                    <tag>${project.version}</tag>
                    <!--推送到私有仓库或者DockerHub时需要开启用户认证-->
                    <useMavenSettingsForAuth>true</useMavenSettingsForAuth>
                    <buildArgs>
                        <JAR_FILE>target/${project.build.finalName}.jar</JAR_FILE>

                    </buildArgs>

                    <!--                    <imageName>${project.name}:${project.version}</imageName>-->
                    <!--                    <baseImage>java</baseImage>-->
                    <!--                    <entryPoint>-->
                    <!--                        {"java","-jar","/${project.build.finalName}.jar"}-->
                    <!--                    </entryPoint>-->
                    <!--                    &lt;!&ndash;                    <dockerDirectory>&ndash;&gt;-->
                    <!--                    &lt;!&ndash;                        ${project.basedir}/src/main/docker&ndash;&gt;-->
                    <!--                    &lt;!&ndash;                    </dockerDirectory>&ndash;&gt;-->
                    <!--                    <skipDockerBuild>false</skipDockerBuild>-->
                    <!--                    <resources>-->
                    <!--                        <resource>-->
                    <!--                            <directory>${project.build.directory}</directory>-->
                    <!--                            <include>${project.build.finalName}.jar</include>-->
                    <!--                        </resource>-->
                    <!--                    </resources>-->
                </configuration>
                <!--直接使用 mvn install 命令打包项目， 就会自动构建并推送镜像-->
                <executions>
                    <execution>
                        <id>default</id>
                        <phase>install</phase>
                        <goals>
                            <goal>build</goal>
                            <goal>push</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

</project>
